version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: chatbot_postgres
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
    ports:
      - "5432:5432"  # Map container port to host port
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Application
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatbot_app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://chatbot_user:chatbot_password@postgres:5432/chatbot_db
      GROQ_API_KEY: ${GROQ_API_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot_frontend
    ports:
      - "80:80"
    environment:
      VITE_API_URL: http://app:8000
    depends_on:
      - app
    restart: unless-stopped

# Volumes for persistent data
volumes:
  postgres_data:
    driver: local 